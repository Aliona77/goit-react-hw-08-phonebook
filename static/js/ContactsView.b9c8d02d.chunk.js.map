{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Container/Container.styles.jsx","components/Container/Container.jsx","components/ContactList/ContactList.styles.jsx","../node_modules/uuid/dist/esm-browser/rng.js","redux/phonebook/phonebook-operations.js","redux/phonebook/pnonebook-selector.js","components/ContactList/ContactList.jsx","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactForm/ContactForm.styles.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","views/ContactView/ContactView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Title","Containers","Container","title","children","getRandomValues","Contact","ContactItem","Text","ButtonDelete","contactsOperations","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","getFilter","filter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","contactsSelectors","getLoading","loading","ContactList","useSelector","contactSelectors","useDispatch","map","id","type","onClick","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","v4","options","buf","rnds","random","Label","Input","ButtonAdd","Span","ContactForm","useState","user","setUser","nameInputId","uuidv4","numberInputId","handleChange","event","currentTarget","reset","onSubmit","preventDefault","some","alert","placeholder","onChange","pattern","required","Filter","contactsActions","target","ContactsViews","isLoadingContacts","useEffect","Spinner"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,2GIF/F,IAAMC,EAAK,8HAMLC,EAAU,mT,OCNR,SAASC,EAAT,GAA0C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxC,OACI,eAACH,EAAD,WACI,cAACD,EAAD,UAAQG,IACPC,KCHN,ICDHC,EDCSC,EAAO,wFAKPC,EAAW,+HAKXC,EAAI,+FAIJC,EAAY,yP,kDEkCVC,EAFY,CAAEC,cArCP,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,6DAC1BD,EAASE,eADiB,kBAIDC,IAAMC,IAAI,aAJT,gBAIhBC,EAJgB,EAIhBA,KACRL,EAASM,YAAqBD,IALN,gDAOxBL,EAASO,YAAmB,KAAMC,UAPV,yDAAN,uDAqCsBC,WAzB1C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,8CACA,WAAOX,GAAP,mBAAAC,EAAA,6DACQW,EAAU,CAAEF,OAAMC,UAExBX,EAASa,eAHX,kBAM2BV,IAAMW,KAAK,YAAaF,GANnD,gBAMYP,EANZ,EAMYA,KACRL,EAASe,YAAkBV,IAP/B,kDASIL,EAASgB,YAAgB,KAAMR,UATnC,0DADA,uDAyBsDS,cAXlC,SAACC,GAAD,8CAAe,WAAOlB,GAAP,SAAAC,EAAA,6DACnCD,EAASmB,eAD0B,kBAI3BhB,IAAMiB,OAAN,oBAA0BF,IAJC,OAKjClB,EAASqB,YAAqBH,IALG,gDAOjClB,EAASsB,YAAmB,KAAMd,UAPD,yDAAf,wD,QCnChBe,EAAc,SAACC,GAAD,OAAWA,EAAMC,SAASA,UAExCC,EAAY,SAACF,GAAD,OAAWA,EAAMC,SAASE,QAE/BC,EAAqBC,YAChC,CAACN,EAAaG,IACd,SAACI,EAAaH,GACZ,IAAMI,EAAmBJ,EAAOK,cAEhC,OAAOF,EAAYH,QAAO,SAACf,GAAD,OACxBA,EAAQF,KAAKsB,cAAcC,SAASF,SAU3BG,EALW,CACxBC,WAlBiB,SAACX,GAAD,OAAWA,EAAMC,SAASW,SAmB3CV,YACAH,eCSac,EAvBK,WAEnB,IAAMZ,EAAWa,YAAYC,GACtBvC,EAAWwC,cAGf,OACI,mCAEQ,cAAC9C,EAAD,UACK+B,EAASgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,eAAChB,EAAD,WAEI,eAACC,EAAD,WAAOc,EAAP,IAAcC,KAEd,cAACd,EAAD,CAAc8C,KAAK,SAASC,QAAS,kBAAM5C,EAASF,EAAmBmB,cAAcyB,KAArF,sBAHKA,W,wBHhB7BG,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKtD,KAGHA,EAAoC,qBAAXuD,QAA0BA,OAAOvD,iBAAmBuD,OAAOvD,gBAAgBwD,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASzD,iBAAkCyD,SAASzD,gBAAgBwD,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAO1D,EAAgBoD,GIjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEPzF,EAAI,EAAGA,EAAI,MAAOA,EACzByF,EAAU1E,MAAMf,EAAI,KAAO0F,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmB7F,GACjB,IAAI8F,EAASC,UAAU7E,OAAS,QAAsBP,IAAjBoF,UAAU,GAAmBA,UAAU,GAAK,EAG7ER,GAAQG,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAM,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAM,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAM,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAMJ,EAAU1F,EAAI8F,EAAS,IAAM,IAAMJ,EAAU1F,EAAI8F,EAAS,KAAOJ,EAAU1F,EAAI8F,EAAS,KAAOJ,EAAU1F,EAAI8F,EAAS,KAAOJ,EAAU1F,EAAI8F,EAAS,KAAOJ,EAAU1F,EAAI8F,EAAS,KAAOJ,EAAU1F,EAAI8F,EAAS,MAAM5B,cAMzf,IAAKoB,EAASC,GACZ,MAAMlE,UAAU,+BAGlB,OAAOkE,GEHMS,MApBf,SAAYC,EAASC,EAAKJ,GAExB,IAAIK,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQhB,KAAOA,KAK7C,GAHAkB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPJ,EAASA,GAAU,EAEnB,IAAK,IAAI7F,EAAI,EAAGA,EAAI,KAAMA,EACxBiG,EAAIJ,EAAS7F,GAAKkG,EAAKlG,GAGzB,OAAOiG,EAGT,OAAOL,EAAUM,IClBZ,IAAME,EAAK,sJAQLC,EAAK,mTAcLC,EAAS,8SAeTC,EAAI,mHC9BF,SAASC,IACrB,IAAMvE,EAAWwC,cAClB,EAAwBgC,mBAAS,CAC/B9D,KAAM,GACNC,OAAQ,KAFV,mBAAO8D,EAAP,KAAaC,EAAb,KAKMjD,EAAWa,YAAYJ,EAAkBX,aAEzCoD,EAAcC,IACdC,EAAgBD,IAKfE,EAAe,SAAAC,GACtB,MAAwBA,EAAMC,cAAtBtE,EAAR,EAAQA,KAAM3B,EAAd,EAAcA,MACd2F,GAAQ,SAAAD,GAAI,kCAAUA,GAAV,kBAAiB/D,EAAO3B,QAiB5BkG,EAAQ,WACTP,EAAQ,CAAEhE,KAAM,GAAIC,OAAQ,MAGnC,OACE,uBAAMuE,SAlBa,SAACH,GAEpB,GADAA,EAAMI,iBACF1D,EAAS2D,MAAK,SAAAxE,GAAO,OAAIA,EAAQF,OAAS+D,EAAK/D,QAGjD,OAFA2E,MAAM,GAAD,OAAIZ,EAAK/D,KAAT,iCACLuE,IAGFjF,EAASF,EAAmBW,WAAWgE,IAEvCQ,KASA,UACE,eAACd,EAAD,WACE,cAACG,EAAD,mBACA,cAACF,EAAD,CACEzB,KAAK,OACLjC,KAAK,OACL4E,YAAY,aACZC,SAAUT,EACV/F,MAAO0F,EAAK/D,KACZgC,GAAIiC,EACJa,QAAQ,yHACRjG,MAAM,kcACNkG,UAAQ,OAKZ,eAACtB,EAAD,WACE,cAACG,EAAD,qBACA,cAACF,EAAD,CACEzB,KAAK,MACLjC,KAAK,SACL4E,YAAY,eACZC,SAAUT,EACV/F,MAAO0F,EAAK9D,OACZ+B,GAAImC,EACJW,QAAQ,yFACRjG,MAAM,giBACNkG,UAAQ,OAKZ,cAACpB,EAAD,CACE1B,KAAK,SADP,4BC/EC,IAAM/C,EAAI,4HC+BF8F,EAvBA,WAEf,IAAM3G,EAAQuD,YAAYJ,EAAkBR,WACpC1B,EAAWwC,cAEf,OACI,qCAEI,cAAC,EAAD,mCACA,cAAC4B,EAAD,CACIzB,KAAK,OACLjC,KAAK,OACL4E,YAAY,iBACZE,QAAQ,yHACRjG,MAAM,kcACNR,MAAOA,EACPwG,SAAU,SAAAR,GAAK,OAAI/E,EAAS2F,IAA6BZ,EAAMa,OAAO7G,SACtE0G,UAAQ,Q,QCjBT,SAASI,IACtB,IAAM7F,EAAWwC,cACXsD,EAAoBxD,YAAYJ,EAAkBC,YAKxD,OAJA4D,qBAAU,WACR/F,EAASF,EAAmBC,mBAC3B,CAACC,IAGF,eAACV,EAAD,CAAWC,MAAM,YAAjB,UACE,cAACgF,EAAD,IACA,0CACA,cAAC,EAAD,IACCuB,GAAqB,cAACE,EAAA,EAAD,IACtB,cAAC,EAAD","file":"static/js/ContactsView.b9c8d02d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from '@emotion/styled/macro';\r\n\r\n\r\nexport const Title = styled.h1`\r\n   text-align: center;\r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n`;\r\nexport const Containers = styled.div`\r\n width: 360px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  margin-top:20px;\r\n  padding: 20px 40px;\r\n\r\n  background-color: rgb(47, 241, 255);\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5)\r\n      }\r\n`","\r\nimport { Title, Containers } from \"./Container.styles\";\r\n\r\nexport default function Container ({ title, children }) {\r\n    return (\r\n        <Containers>\r\n            <Title>{title}</Title>\r\n            {children}\r\n      </Containers>\r\n    )\r\n};\r\n","import styled from '@emotion/styled/macro';\r\n\r\n\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 300px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n`\r\nexport const Text = styled.p`\r\nfont-size:18px;\r\nfont-weight: 500;\r\n`\r\nexport const ButtonDelete = styled.button`\r\nbackground-color: #fff;\r\ncursor: pointer;\r\nmargin-left: 20px;\r\n  border-radius:5px;\r\n  border: 1px solid black;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n`","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./phonebook-actions\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact =\n  ({ name, number }) =>\n  async (dispatch) => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n\n    try {\n      const { data } = await axios.post(\"/contacts\", contact);\n      dispatch(addContactSuccess(data));\n    } catch (error) {\n      dispatch(addContactError(error.message));\n    }\n  };\n\nconst deleteContact = (contactId) => async (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n\nconst contactsOperations = { fetchContacts, addContact, deleteContact };\n\nexport default contactsOperations;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\n\nconst getContacts = (state) => state.contacts.contacts;\n\nconst getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getLoading,\n  getFilter,\n  getContacts,\n};\nexport default contactsSelectors;\n","import { Contact, ContactItem, ButtonDelete, Text } from './ContactList.styles'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport  contactsOperations from '../../redux/phonebook/phonebook-operations';\r\nimport * as contactSelectors from \"../../redux/phonebook/pnonebook-selector\";\r\n\r\n\r\n\r\nconst ContactList = () => {\r\n    \r\n const contacts = useSelector(contactSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n    return (\r\n        <>\r\n           \r\n                <Contact>\r\n                    {contacts.map(({ id, name, number }) => (\r\n                        <ContactItem\r\n                            key={id}>\r\n                            <Text>{name}:{number}\r\n                            </Text>\r\n                            <ButtonDelete type=\"button\" onClick={() => dispatch(contactsOperations.deleteContact(id))}>Delete</ButtonDelete>\r\n                        </ContactItem>\r\n                    ))}\r\n                </Contact>\r\n          \r\n                </>\r\n    )\r\n}\r\nexport default ContactList;\r\n\r\n\r\n  \r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import styled from '@emotion/styled/macro';\r\n\r\nexport const Label = styled.label`\r\nfont-size:18px;\r\nfont-weight:600;\r\njustify-content:center;\r\npadding-bottom: 15px;\r\nmargin:0;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  padding: 6px;\r\n  margin-bottom: 20px;\r\n  border-radius:5px;\r\n  min-width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n    &:focus{\r\n        border: 2px solid #eee;\r\n        outline: none;\r\n    }\r\n`\r\nexport const ButtonAdd = styled.button`\r\n  background-color: #fff;\r\n  outline: none;\r\n  padding: 6px 8px;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n   border-radius:5px;\r\n   border: 1px solid black;\r\n   &:hover {\r\n    box-shadow: 0 0 20px rgba(50, 50, 93, 0.25);\r\n    background: blue;\r\n  }\r\n  `\r\nexport const Span = styled.span`\r\n font-size: 20px;\r\n  font-weight: 400;\r\n  margin-bottom: 7px;\r\n  `","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Label, Input, ButtonAdd, Span } from './ContactForm.styles'\r\n\r\nimport { useSelector, useDispatch  } from \"react-redux\";\r\nimport   contactsSelectors  from '../../redux/phonebook/pnonebook-selector';\r\nimport  contactsOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\n\r\nexport default function ContactForm() {\r\n   const dispatch = useDispatch();\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    number: '',\r\n  });\r\n  \r\n  const contacts = useSelector(contactsSelectors.getContacts)\r\n   \r\n  const nameInputId = uuidv4();\r\n  const numberInputId = uuidv4();\r\n  \r\n  \r\n  \r\n    \r\n  const  handleChange = event => {\r\n  const { name, value } = event.currentTarget;\r\n  setUser(user => ({ ...user, [name]: value }));\r\n    };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (contacts.some(contact => contact.name === user.name)) {\r\n      alert(`${user.name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact(user));\r\n\r\n    reset();\r\n  };\r\n  \r\n  \r\n    const reset = () => {\r\n         setUser({ name: '', number: '' });\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Label>\r\n        <Span>Name</Span>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          onChange={handleChange}\r\n          value={user.name}\r\n          id={nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n                          \r\n        />\r\n      </Label>\r\n        \r\n      <Label>\r\n        <Span >Number</Span>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter number\"\r\n          onChange={handleChange}\r\n          value={user.number}\r\n          id={numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n                   \r\n        />\r\n      </Label>\r\n               \r\n      <ButtonAdd\r\n        type=\"submit\"\r\n      >\r\n        Add contact\r\n      </ButtonAdd>\r\n    </form>\r\n  );\r\n}\r\n\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Text = styled.p`\r\n display: block;\r\n  margin-top: 5px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`\r\n","\r\nimport { Input } from '../ContactForm/ContactForm.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport * as contactsActions from '../../redux/phonebook/phonebook-actions';\r\nimport contactsSelectors  from '../../redux/phonebook/pnonebook-selector';\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    \r\nconst value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Text>Find contact by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={event => dispatch(contactsActions.changeFilter(event.target.value))}\r\n                required>\r\n            </Input>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n\r\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"../../components/Container/Container\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport contactsOperations from \"../../redux/phonebook/phonebook-operations\";\nimport contactsSelectors from \"../../redux/phonebook/pnonebook-selector\";\nimport { Spinner } from \"../../components/Spinner/Spinner\";\n\nexport default function ContactsViews() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container title=\"Phonebook\">\n      <ContactForm />\n      <h1>Contacts</h1>\n      <Filter />\n      {isLoadingContacts && <Spinner />}\n      <ContactList />\n    </Container>\n  );\n}\n"],"sourceRoot":""}