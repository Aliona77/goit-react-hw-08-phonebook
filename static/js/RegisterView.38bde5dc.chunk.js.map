{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","box","alignItems","RegisterView","dispatch","useDispatch","useState","name","email","password","user","setUser","handleChange","target","style","onSubmit","e","preventDefault","authOperations","register","autoComplete","type","onChange"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0IIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,IAAK,CACHH,QAAS,OACTC,cAAe,SACfG,WAAY,WAID,SAASC,IACtB,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,CAC/BC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,mBAAOC,EAAP,KAAaC,EAAb,KAMQJ,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEfG,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUN,EAAoB,EAApBA,KAAMlB,EAAc,EAAdA,MACtCsB,EAAQ,2BAAKD,GAAN,kBAAaH,EAAOlB,MAU7B,OACE,sBAAKyB,MAAOpB,EAAOO,IAAnB,UACE,0CAEA,uBAAMc,SAXW,SAACC,GACpBA,EAAEC,iBAEFb,EAASc,IAAeC,SAAS,CAAEZ,OAAMC,QAAOC,cAChDE,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAOTK,MAAOpB,EAAOC,KAAMyB,aAAa,MAA/D,UACE,wBAAON,MAAOpB,EAAOG,MAArB,iBAEE,uBAAOwB,KAAK,OAAOd,KAAK,OAAOlB,MAAOkB,EAAMe,SAAUV,OAGxD,wBAAOE,MAAOpB,EAAOG,MAArB,kBAEE,uBACEwB,KAAK,QACLd,KAAK,QACLlB,MAAOmB,EACPc,SAAUV,OAId,wBAAOE,MAAOpB,EAAOG,MAArB,qBAEE,uBACEwB,KAAK,WACLd,KAAK,WACLlB,MAAOoB,EACPa,SAAUV,OAGd,wBAAQS,KAAK,SAAb","file":"static/js/RegisterView.38bde5dc.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"../../redux/auth\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = user;\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser({ ...user, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(authOperations.register({ name, email, password }));\n    setUser({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  return (\n    <div style={styles.box}>\n      <h1>Sign in </h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Sign in</button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}