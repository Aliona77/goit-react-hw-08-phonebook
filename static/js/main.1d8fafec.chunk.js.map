{"version":3,"sources":["components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.jsx","components/AuthNav/AuthNav.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.jsx","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reduser.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-actions.js","components/Spinner/Spinner.jsx"],"names":["styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsLogin","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","fontSize","name","UserMenu","getUserName","dispatch","useDispatch","onLogout","useCallback","authOperations","logOut","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","console","log","getCurrentUser","fallback","Spinner","path","contacts","createReducer","fetchContactsSuccess","state","payload","addContactSuccess","deleteContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","authActions","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","__","token","error","isLogin","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get","spin","keyframes","CgSpinner","defaultProps","size"],"mappings":"0OAMMA,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YA0BIE,EAtBI,WACjB,IAAMC,EAAaC,YAAYC,IAAcC,YAE/C,OACE,gCACE,cAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACC,MAAOf,EAAOC,KAAMe,YAAahB,EAAOO,WAA9D,kBAIAE,GACI,cAAC,IAAD,CACEI,GAAG,YACHC,OAAK,EACLC,MAAOf,EAAOC,KACde,YAAahB,EAAOO,WAJtB,0B,iBCxBFP,EAAS,CACbiB,UAAW,CACTf,QAAS,OACTgB,WAAY,UAEdC,OAAQ,CACNC,YAAa,EACbC,SAAU,GACVf,MAAM,QAERgB,KAAM,CACJjB,WAAY,IACZe,YAAa,KAIF,SAASG,IACvB,IAAMD,EAAOZ,YAAYC,IAAca,aAChCC,EAAWC,cACXC,EAAWC,uBACf,kBAAMH,EAASI,IAAeC,YAC9B,CAACL,IAGH,OACE,sBAAKV,MAAOf,EAAOiB,UAAnB,UACE,cAAC,IAAD,CAAkBF,MAAOf,EAAOmB,SAChC,uBAAMJ,MAAOf,EAAOsB,KAApB,cAA4BA,KAC5B,wBAAQS,KAAK,SAASC,QAASL,EAA/B,wBC9BN,IAAM3B,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,QAAS,GACTC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVD,MAAO,YAII,SAAS2B,IACtB,OACE,gCACE,cAAC,IAAD,CACEpB,GAAG,YACHC,OAAK,EACLC,MAAOf,EAAOC,KACde,YAAahB,EAAOO,WAJtB,qBASA,cAAC,IAAD,CACEM,GAAG,SACHC,OAAK,EACLC,MAAOf,EAAOC,KACde,YAAahB,EAAOO,WAJtB,uBCpBN,IAAMP,EAAS,CACbkC,OAAQ,CACNhC,QAAS,OACTiC,eAAgB,gBAChBjB,WAAY,SACZkB,aAAc,sBAIH,SAASC,IAEtB,IAAM5B,EAAaC,YAAYC,IAAcC,YAE7C,OAEC,yBAAQG,MAAOf,EAAOkC,OAAtB,UACG,cAAC,EAAD,IACCzB,EAAa,cAACc,EAAD,IAAe,cAACU,EAAD,O,gDCrBpB,SAASK,EAAT,GAIX,IAHFC,EAGC,EAHDA,SAGC,IAFDC,kBAEC,MAFY,IAEZ,EADEC,EACF,iBACKhC,EAAaC,YAAYC,IAAcC,YAC7C,OACE,cAAC,IAAD,2BAAW6B,GAAX,aACGhC,EAAa8B,EAAW,cAAC,IAAD,CAAU1B,GAAI2B,O,6CCR9B,SAASE,EAAT,GAKX,IAJFH,EAIC,EAJDA,SAIC,IAHDI,kBAGC,aAFDH,kBAEC,MAFY,IAEZ,EADEC,EACF,iBAEKG,EADalC,YAAYC,IAAcC,aACR+B,EAErC,OACE,cAAC,IAAD,2BAAWF,GAAX,aACGG,EAAiB,cAAC,IAAD,CAAU/B,GAAI2B,IAAiBD,K,YCNjDM,EAAWC,gBAAK,kBACpB,iCAEIC,EAAeD,gBAAK,kBACxB,iCAEIE,EAAYF,gBAAK,kBACrB,iCAEIG,EAAeH,gBAAK,kBACxB,iCAIa,SAASI,IACtB,IAAMzB,EAAWC,cAOjB,OALDyB,qBAAU,WACPC,QAAQC,IAAI,aACZ5B,EAASI,IAAeyB,oBACvB,CAAC7B,IAGF,qCACM,cAACY,EAAD,IAEE,cAAC,IAAD,UACE,eAAC,WAAD,CAAUkB,SAAU,cAACC,EAAA,EAAD,IAApB,UACA,cAACd,EAAD,CAAa5B,OAAK,EAAC2C,KAAK,IAAxB,SACE,cAACZ,EAAD,MAGF,cAACH,EAAD,CAAc5B,OAAK,EAAC2C,KAAK,YAAYd,YAAU,EAA/C,SACE,cAACI,EAAD,MAGF,cAACL,EAAD,CAAc5B,OAAK,EAAC2C,KAAK,SAASjB,WAAW,YAAYG,YAAU,EAAnE,SACE,cAACK,EAAD,MAGF,cAACV,EAAD,CAAcmB,KAAK,YAAYjB,WAAW,SAA1C,SACE,cAACS,EAAD,c,+FCpCVS,EAAWC,YAAc,IAAD,mBAC3BC,KAAuB,SAACC,EAAD,YAAUC,WADN,cAE3BC,KAAoB,SAACF,EAAD,OAAUC,EAAV,EAAUA,QAAV,4BAA4BD,GAA5B,CAAmCC,OAF5B,cAG3BE,KAAuB,SAACH,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACtBD,EAAMI,QAAO,qBAAGC,KAAgBJ,QAJN,IAOxBK,EAAUR,aAAc,GAAD,mBAC1BS,KAAuB,kBAAM,KADH,cAE1BR,KAAuB,kBAAM,KAFH,cAG1BS,KAAqB,kBAAM,KAHD,cAI1BC,KAAoB,kBAAM,KAJA,cAK1BP,KAAoB,kBAAM,KALA,cAM1BQ,KAAkB,kBAAM,KANE,cAO1BC,KAAuB,kBAAM,KAPH,cAQ1BR,KAAuB,kBAAM,KARH,cAS1BS,KAAqB,kBAAM,KATD,IAWvBR,EAASN,YAAc,GAAD,eACzBe,KAAe,SAACC,EAAD,YAAMb,YAGTc,cAAgB,CAC7BlB,WACAO,SACAE,YCrBIU,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGDC,EAAQC,YAAe,CAClCC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,KACxCvC,SAAUwC,GAEZrB,aACAsB,UAAUC,IAGCC,GAAYC,YAAaV,GCjCtCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAazB,QAAS,KAAMkC,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAACnD,EAAD,YAKRwD,SAASC,eAAe,U,yJCjBpBC,EAAkBC,YAAa,wBAC/BC,EAAkBD,YAAa,wBAC/BE,EAAgBF,YAAa,sBAE7BG,EAAeH,YAAa,qBAC5BI,EAAeJ,YAAa,qBAC5BK,EAAaL,YAAa,mBAwBjBM,EAdK,CAClBP,kBACAE,kBACAC,gBACAK,cAZoBP,YAAa,sBAajCQ,cAZoBR,YAAa,sBAajCS,YAZkBT,YAAa,oBAa/BG,eACAC,eACAC,aACAK,sBAd4BV,YAAa,8BAezCW,sBAd4BX,YAAa,8BAezCY,oBAd0BZ,YAAa,6B,cCZnCa,EAAmB,CAAEpG,KAAM,KAAMqG,MAAO,MAExCC,EAAOjE,YAAc+D,GAAD,mBACvBP,EAAYL,iBAAkB,SAACnC,EAAD,YAAMb,QAAsB8D,QADnC,cAEvBT,EAAYF,cAAe,SAACtC,EAAD,YAAMb,QAAsB8D,QAFhC,cAGvBT,EAAYE,eAAgB,SAAC1C,EAAGkD,GAAJ,OAAWH,KAHhB,cAIvBP,EAAYK,uBAAwB,SAAC7C,EAAD,YAAMb,WAJnB,IAOpBgE,EAAQnE,YAAc,MAAD,mBACxBwD,EAAYL,iBAAkB,SAACnC,EAAD,YAAMb,QAAsBgE,SADlC,cAExBX,EAAYF,cAAe,SAACtC,EAAD,YAAMb,QAAsBgE,SAF/B,cAGxBX,EAAYE,eAAgB,SAAC1C,EAAGkD,GAAJ,OAAW,QAHf,IAMrBE,EAAQpE,YAAc,MAAD,mBACxBwD,EAAYJ,eAAgB,SAACpC,EAAD,YAAMb,WADV,cAExBqD,EAAYD,YAAa,SAACvC,EAAD,YAAMb,WAFP,cAGxBqD,EAAYG,aAAc,SAAC3C,EAAD,YAAMb,WAHR,cAIxBqD,EAAYM,qBAAsB,SAAC9C,EAAD,YAAMb,WAJhB,IAOrBkE,EAAUrE,aAAc,GAAD,mBAC1BwD,EAAYL,iBAAkB,kBAAM,KADV,cAE1BK,EAAYF,cAAe,kBAAM,KAFP,cAG1BE,EAAYK,uBAAwB,kBAAM,KAHhB,cAI1BL,EAAYM,qBAAsB,kBAAM,KAJd,cAK1BN,EAAYJ,eAAgB,kBAAM,KALR,cAM1BI,EAAYD,YAAa,kBAAM,KANL,cAO1BC,EAAYE,eAAgB,kBAAM,KAPR,IAUdzC,cAAgB,CAC7BgD,OACAI,UACAF,QACAC,U,0CCrCFE,IAAMC,SAASC,QAAU,wCAEzB,IAAML,EAAQ,SACRA,GACFG,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDR,IAFtDA,EAAQ,WAKVG,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IAiEnCzG,EAFQ,CAAE0G,SA3DR,SAACC,GAAD,8CAAiB,WAAO/G,GAAP,eAAAgH,EAAA,6DAChChH,EAAS0F,EAAYP,mBADW,kBAIPqB,IAAMS,KAAK,gBAAiBF,GAJrB,OAIxBG,EAJwB,OAM9Bb,EAAUa,EAASC,KAAKd,OACxBrG,EAAS0F,EAAYL,gBAAgB6B,EAASC,OAPhB,gDAS9BnH,EAAS0F,EAAYJ,cAAc,KAAM8B,UATX,yDAAjB,uDA2DkB/G,OAjCpB,yDAAM,WAAOL,GAAP,SAAAgH,EAAA,6DACnBhH,EAAS0F,EAAYC,iBADF,kBAIXa,IAAMS,KAAK,iBAJA,OAKjBZ,IAEArG,EAAS0F,EAAYE,iBAPJ,gDASjB5F,EAAS0F,EAAYG,YAAY,KAAMuB,UATtB,yDAAN,uDAiC4BC,MA9C7B,SAACN,GAAD,8CAAiB,WAAO/G,GAAP,eAAAgH,EAAA,6DAC7BhH,EAAS0F,EAAYH,gBADQ,kBAIJiB,IAAMS,KAAK,eAAgBF,GAJvB,OAIrBG,EAJqB,OAM3Bb,EAAUa,EAASC,KAAKd,OACxBrG,EAAS0F,EAAYF,aAAa0B,EAASC,OAPhB,gDAS3BnH,EAAS0F,EAAYD,WAAW,KAAM2B,UATX,yDAAjB,uDA8CoCvF,eApB3B,yDAAM,WAAO7B,EAAUsH,GAAjB,mBAAAN,EAAA,2DAGvBM,IADaC,EAFU,EAEzBjD,KAAQ+B,MAFiB,wDAS3BA,EAAUkB,GACVvH,EAAS0F,EAAYI,yBAVM,kBAaFU,IAAMgB,IAAI,kBAbR,OAanBN,EAbmB,OAczBlH,EAAS0F,EAAYK,sBAAsBmB,EAASC,OAd3B,kDAgBzBnH,EAAS0F,EAAYM,oBAAoB,KAAMoB,UAhBtB,0DAAN,0DC7CRlI,EAJO,CACpBC,WALiB,SAACiD,GAAD,OAAWA,EAAMkC,KAAKiC,SAMvCxG,YAJkB,SAACqC,GAAD,OAAWA,EAAMkC,KAAK6B,KAAKtG,Q,gCCF/C,+VAEa8C,EAAuByC,YAClC,gCAEWjD,EAAuBiD,YAClC,gCAEWxC,EAAqBwC,YAAa,8BAElCvC,EAAoBuC,YAAa,8BACjC9C,EAAoB8C,YAAa,8BACjCtC,EAAkBsC,YAAa,4BAE/BrC,EAAuBqC,YAClC,iCAEW7C,EAAuB6C,YAClC,iCAEWpC,EAAqBoC,YAAa,+BAElCnC,EAAemC,YAAa,0B,wGClBnCqC,EAAOC,YAAH,yGASG3F,EAAU,YAAO4F,IAAP,qBAAH,aACLF,EADK,2BAIpB1F,EAAQ6F,aAAe,CACrBC,KAAM,K","file":"static/js/main.1d8fafec.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLogin);\r\n  \r\nreturn (\r\n  <nav>\r\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n      Home\r\n    </NavLink>\r\n\r\n   {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n}\r\nexport default Navigation;\r\n\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport EmojiNatureIcon from '@material-ui/icons/EmojiNature';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n    fontSize: 40,\r\n    color:\"lime\",\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(\r\n    () => dispatch(authOperations.logOut()),\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <EmojiNatureIcon  style={styles.avatar} />\r\n      <span style={styles.name}> {name}</span>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","  import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n       Sign in\r\n      </NavLink>\r\n      \r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Log in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  \r\n  const isLoggedIn = useSelector(authSelectors.getIsLogin);\r\n  \r\n  return (\r\n   \r\n   <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n    \r\n  );\r\n}","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/auth\";\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLogin);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/auth\";\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLogin);\n  const shouldRedirect = isLoggedIn && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { useEffect, Suspense, lazy} from 'react';\nimport {  useDispatch} from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport { authOperations } from './redux/auth';\nimport { Spinner } from './components/Spinner/Spinner';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView/HomeView' /* webpackChunkName: \"HomeView\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView/RegisterView' /* webpackChunkName: \"RegisterView\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView/LoginView' /* webpackChunkName: \"LoginView\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactView/ContactView' /* webpackChunkName: \"ContactsView\" */),\n);\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n useEffect(() => {\n    console.log('useEffect');\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch])\n\n  return (\n    <>\n          <AppBar />\n          \n            <Switch>\n              <Suspense fallback={<Spinner/>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n                </PublicRoute>\n                \n              <PublicRoute  exact path=\"/register\" restricted>\n                <RegisterView />\n                </PublicRoute>\n                \n              <PublicRoute  exact path=\"/login\" redirectTo=\"/contacts\" restricted >\n                <LoginView />\n                </PublicRoute>\n                \n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <ContactsView />\n          </PrivateRoute>\n          \n                </Suspense>\n                </Switch>\n          </>\n          )\n}\n\n\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./phonebook-actions\";\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./phonebook/phonebook-reducer\";\nimport { authReducer } from \"./auth\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nconst authActions = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\nexport default authActions;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: (_, __) => null,\n});\n\nconst error = createReducer(null, {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst isLogin = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isLogin,\n  token,\n  error,\n});\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst authOperations = { register, logOut, logIn, getCurrentUser };\n\nexport default authOperations;\n","const getIsLogin = (state) => state.auth.isLogin;\n\nconst getUserName = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLogin,\n  getUserName,\n};\nexport default authSelectors;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};"],"sourceRoot":""}