{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LoginView/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","styles","form","width","label","display","flexDirection","marginBottom","box","alignItems","LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","style","onSubmit","e","preventDefault","authOperations","logIn","autoComplete","type","name","onChange","evt","target"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,2HIDhGC,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,IAAK,CACHH,QAAS,OACTC,cAAe,SACfG,WAAY,WAID,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAKMC,EAAWC,cAMjB,OACE,sBAAKC,MAAOjB,EAAOO,IAAnB,UACE,wCAEA,uBAAMW,SATW,SAACC,GACpBA,EAAEC,iBAEFL,EAASM,IAAeC,MAAM,CAAEX,QAAOE,eAMPI,MAAOjB,EAAOC,KAAMsB,aAAa,MAA/D,UACE,wBAAON,MAAOjB,EAAOG,MAArB,kBAEE,uBACEqB,KAAK,QACLC,KAAK,QACL9B,MAAOgB,EACPe,SA1BgB,SAACC,GACzBf,EAASe,EAAIC,OAAOjC,aA6BhB,wBAAOsB,MAAOjB,EAAOG,MAArB,qBAEE,uBACEqB,KAAK,WACLC,KAAK,WACL9B,MAAOkB,EACPa,SA/BmB,SAACC,GAC5Bb,EAAYa,EAAIC,OAAOjC,aAkCnB,wBAAQ6B,KAAK,SAAb","file":"static/js/LoginView.4b0dffe8.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"../../redux/auth\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n};\n\nexport default function LoginView() {\n  const [email, setEmail] = useState(\"\");\n  const handleEmailChange = (evt) => {\n    setEmail(evt.target.value);\n  };\n\n  const [password, setPassword] = useState(\"\");\n  const handlePasswordChange = (evt) => {\n    setPassword(evt.target.value);\n  };\n\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password }));\n  };\n  return (\n    <div style={styles.box}>\n      <h1>Log in</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleEmailChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </label>\n\n        <button type=\"submit\">Log in</button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}